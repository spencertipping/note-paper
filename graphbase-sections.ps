%!PS
% Just like graphbase, but this time with light shading and crosshairs. We're
% using grayscale to leverage printer dithering.
%
% This version uses delineated sections rather than covering the whole page with
% graph lines.

/inch       {72 mul} def
/cell {inch 0.2 mul} def

/section_id 0 def

/chsize {0.15 cell}    def
/choff  {chsize 2 div} def
/vline  { newpath dup 0      moveto h cell      lineto stroke } def
/hline  { newpath dup 0 exch moveto w cell exch lineto stroke } def

/crosshair
{                                       % x y
  1 index choff sub 1 index moveto      % x y
  1 index choff add 1 index lineto      % x y
  1 index 1 index choff sub moveto      % x y
  choff add lineto                      %
} def

/ssize { 0.2 cell } def
/write_binary                           % n
{
  % Emits little-endian in bit ordering, advancing forwards by half a section
  % block per bit.
  dup 0 ne                              % n n!=0
  { ssize 0.5 mul 0 translate           % n
    dup 1 and 0 ne                      % n n&1?
    { newpath
        0               0     moveto
        ssize  0.25 mul 0     rlineto
        0               ssize rlineto
        ssize -0.25 mul 0     rlineto
      closepath fill } if               % n
    -1 bitshift write_binary } if       % write_binary(n>>1)
} def

/section_header
{
  gsave
    0 h cell translate
    newpath 0 0 moveto
      ssize ssize rlineto
      0 ssize neg rlineto
    closepath
    fill

    1 2 9
    {
      newpath ssize exch mul 0 moveto
        0 ssize rlineto
        ssize 0 rlineto
        0 ssize neg rlineto
      closepath
      fill
    } for

    % Encode each of (w, h) as a 5-bit binary integer in one cell.
    gsave 2 cell 0 translate w write_binary grestore
    gsave 3 cell 0 translate h write_binary grestore

    % Encode section ID as a 20-bit binary integer. This occupies four cells.
    gsave
      4 cell 0 translate
      section_id write_binary
    grestore
  grestore
} def

% Render a section at the current transform origin. You should translate/rotate
% to place the bottom left corner at (0, 0).
%
% Width and height are specified in number of cells.
/section
{                                       % w h hgray vgray
  /vcol exch def
  /hcol exch def
  /h    exch def
  /w    exch def                        %
  section_id dup 1 add
    /section_id exch def                % id
    section_header                      %

  72 600 div setlinewidth

  hcol setgray 0 1 h {cell hline} for
  vcol setgray 0 1 w {cell vline} for

  0.762 setgray
  newpath

  1 cell 1 cell w 1 sub cell {          % x
    1 cell 1 cell h 1 sub cell {        % x y
      1 index 1 index crosshair         % x y
      pop                               % x
    } for                               % x
    pop                                 %
  } for
  stroke
} def

/halfpage
{
  gsave
  22.5 cell 1 cell translate
  19 26 0.785 0.788 section
  grestore

  gsave
  1 cell 14 cell translate
  -90 rotate
  13 21 0.788 0.785 section
  grestore

  gsave
  22 cell 27 cell translate
  -180 rotate
  21 12 0.788 0.785 section
  grestore
} def

/page
{
  halfpage

  gsave
  8.5 inch 11 inch translate
  180 rotate
  halfpage
  grestore

  showpage
} def

0 1 100 { page } for
